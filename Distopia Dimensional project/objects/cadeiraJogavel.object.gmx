<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>cadeirabaixo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>cadeirabaixo</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jogavel = true;
image_speed = 0.3;
canMove = true;
vel = 4;
modoataque=false;
estado = 2;
velA = 10;
vidas = 3;
invincible = false;
levandodano=false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///levandodano=false;
levandodano=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DELETAR ATAQUE
if (!jogavel) and (instance_exists(ataquecadeira)) {instance_destroy(ataquecadeira)};
if (jogavel) and (instance_exists(obj_espada)) {instance_destroy(obj_espada)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DELETAR ATAQUE
if (!jogavel) and (instance_exists(ataquecadeira)) {instance_destroy(ataquecadeira)};
if (jogavel) and (instance_exists(obj_espada)) {instance_destroy(obj_espada)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ATAQUE
if(!levandodano){




if (modoataque) and (estado ==1) {vMovFinal = -velA};
if (modoataque) and (estado ==2) {vMovFinal = velA};
if (modoataque) and (estado ==3) {hMovFinal = -velA};
if (modoataque) and (estado ==4) {hMovFinal = velA};


if (!jogavel){
if (estado==1) {instance_create(x,y-45,ataquecadeira)};
if (estado==2) {instance_create(x,y+45,ataquecadeira)};
if (estado==3) {instance_create(x-45,y,ataquecadeira)};
if (estado==4) {instance_create(x+45,y,ataquecadeira)};
if (modoataque){
alarm[5]=1
alarm[4]=3
};
}
//instance_create(x,y,ataquecadeira);

if (jogavel){
if (estado==1) {instance_create(x,y-45,obj_espada)};
if (estado==2) {instance_create(x,y+45,obj_espada)};
if (estado==3) {instance_create(x-45,y,obj_espada)};
if (estado==4) {instance_create(x+45,y,obj_espada)};
if (modoataque){
alarm[5]= 1
alarm[4]=3
};
}


}


/*
if (estado==1) {instance_create(x,y-30,ataquecadeira)};
if (estado==2) {instance_create(x,y+30,ataquecadeira)};
if (estado==3) {instance_create(x-30,y,ataquecadeira)};
if (estado==4) {instance_create(x+30,y,ataquecadeira)};
*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ATAQUE
if(!levandodano){



if (modoataque) and (estado ==1) {vMovFinal = -velA};
if (modoataque) and (estado ==2) {vMovFinal = velA};
if (modoataque) and (estado ==3) {hMovFinal = -velA};
if (modoataque) and (estado ==4) {hMovFinal = velA};


if (!jogavel){
if (estado==1) {instance_create(x,y-45,ataquecadeira)};
if (estado==2) {instance_create(x,y+45,ataquecadeira)};
if (estado==3) {instance_create(x-45,y,ataquecadeira)};
if (estado==4) {instance_create(x+45,y,ataquecadeira)};
if (modoataque){
alarm[5]=1
alarm[4]=3
};
}
//instance_create(x,y,ataquecadeira);

if (jogavel){
if (estado==1) {instance_create(x,y-45,obj_espada)};
if (estado==2) {instance_create(x,y+45,obj_espada)};
if (estado==3) {instance_create(x-45,y,obj_espada)};
if (estado==4) {instance_create(x+45,y,obj_espada)};
if (modoataque){
alarm[5]= 1
alarm[4]=3
};
}

}





/*
if (estado==1) {instance_create(x,y-30,ataquecadeira)};
if (estado==2) {instance_create(x,y+30,ataquecadeira)};
if (estado==3) {instance_create(x-30,y,ataquecadeira)};
if (estado==4) {instance_create(x+30,y,ataquecadeira)};
*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DELETAR ATAQUE
if (!jogavel) and (instance_exists(ataquecadeira)) {instance_destroy(ataquecadeira)};
if (jogavel) and (instance_exists(obj_espada)) {instance_destroy(obj_espada)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ATAQUE
if(!levandodano){


if (modoataque) and (estado ==1) {vMovFinal = -velA};
if (modoataque) and (estado ==2) {vMovFinal = velA};
if (modoataque) and (estado ==3) {hMovFinal = -velA};
if (modoataque) and (estado ==4) {hMovFinal = velA};


if (!jogavel){
if (estado==1) {instance_create(x,y-45,ataquecadeira)};
if (estado==2) {instance_create(x,y+45,ataquecadeira)};
if (estado==3) {instance_create(x-45,y,ataquecadeira)};
if (estado==4) {instance_create(x+45,y,ataquecadeira)};
if (modoataque){
alarm[5]=1
alarm[4]=3
};
}
//instance_create(x,y,ataquecadeira);

if (jogavel){
if (estado==1) {instance_create(x,y-45,obj_espada)};
if (estado==2) {instance_create(x,y+45,obj_espada)};
if (estado==3) {instance_create(x-45,y,obj_espada)};
if (estado==4) {instance_create(x+45,y,obj_espada)};
if (modoataque){
alarm[5]= 1
alarm[4]=3
};
}

}






/*
if (estado==1) {instance_create(x,y-30,ataquecadeira)};
if (estado==2) {instance_create(x,y+30,ataquecadeira)};
if (estado==3) {instance_create(x-30,y,ataquecadeira)};
if (estado==4) {instance_create(x+30,y,ataquecadeira)};
*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>modoataque=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AJEITAR SPRITE
image_speed = 0.3;
if (estado==1) {sprite_index = cadeiracima;}
if (estado==2) {sprite_index = cadeirabaixo;}
if (estado==3) {sprite_index = cadeiralado ;image_xscale = -1;}
if (estado==4) {sprite_index = cadeiralado;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//PAUSE
if(global.pause) exit;
//


image_speed = 0.3


if (canMove and !modoataque){ 


}


if (!levandodano){

if (canMove) {key_down = keyboard_check(ord('S'));}
if (canMove) {key_up = -keyboard_check(ord('W'));}
if (canMove) {key_left = -keyboard_check(ord('A'));} 
if (canMove) {key_right = keyboard_check(ord('D'));}

}

//if (canAttack) {image_speed = 1};



if(canMove) dirhor = key_left + key_right;
if(canMove) dirver = key_up + key_down;
if(canMove) hMovFinal = dirhor*vel;
if(canMove) vMovFinal = dirver*vel;







if (key_up==-1) and (canMove)  {estado = 1};
if (key_down) and (canMove) {estado = 2};
if (key_left==-1) and (canMove)  {estado = 3};
if (key_right) and (canMove)  {estado = 4};








//--------------------------------------------------------------------------------Ataque---------------------------------------------------
if (jogavel)and(!modoataque) and (canMove) and (!levandodano) and (keyboard_check_released(ord("U"))) 
{

image_speed = 0.3;
canMove=false;
modoataque=true;

hMovFinal=0;
vMovFinal=0;


alarm[0] = 30;    //ajeitar sprite
alarm[1] = 30;    //canMove=true
alarm[2] = 30;    //modoataque=false
alarm[3] = 10; //ataque
alarm[4] = 12;    //deletar ataque
alarm[5] = 14; //ataque2la
alarm[7] = 16;    //deletar ataque
alarm[6] = 18; //ataque
alarm[8] = 20;    //deletar ataque


if (estado==4) {sprite_index = (Timmylado); sprite_index = (cadeiraataquelado);};
if (estado==3) {sprite_index = (Timmylado); image_xscale = -1 ; sprite_index = (cadeiraataquelado);};
if (estado==2) {sprite_index = (Timmylado); sprite_index = (cadeiraataquebaixo);};
if (estado==1) {sprite_index = (Timmylado); sprite_index = (cadeiraataquecima);};

//image_speed = 1;
//if (estado == 1) {sprite_index = (Timmyataquecima1);} 
//if (estado == 2) {sprite_index = (Timmyataquebaixo1);}
//if (estado == 3) {image_xscale = -1; sprite_index = (Timmyataquelado1);}
//if (estado == 4) {sprite_index = (Timmyataquelado1);}

//canAttack = false;
//canMove = false;

//sprite_index = sprite[combo];
//combo = (combo+1)%combomax;


//alarm[1] = 15; //canAttack = true
//alarm[2] = 10; //combo = 0
//alarm[3] = 15; // parar do lado certo
//alarm[4] = 15; // canMove = true
//alarm[5] = 7.5; // instance_create(x,y,espada)
//alarm[6] = 10; // destruir espada
//alarm[7] = 20; // combo = 0






};
//-------------------------------------------------------------------------------------------------------------------------------------------------------


if (place_meeting(x+hMovFinal,y,obj_wall)) 
{
 while(!place_meeting(x+sign(hMovFinal),y,obj_wall)){x += sign(hMovFinal)}; 
 hMovFinal = 0; 
} ;

if (place_meeting(x,y+vMovFinal,obj_wall))
{
 while(!place_meeting(x,y+sign(vMovFinal),obj_wall)){ y += sign(vMovFinal); }
  vMovFinal = 0; 
  
  
} ;


if (place_meeting(x-1,y,obj_wall)) 
{
  x=x+1;

};
///////////////////////////////////////////////////////////////////////////////colisao da caixa////////////////////////////////
if (place_meeting(x+hMovFinal,y,caixasemnada)) 
{
 while(!place_meeting(x+sign(hMovFinal),y,caixasemnada)){x += sign(hMovFinal)}; 
 hMovFinal = 0; 
} ;

if (place_meeting(x,y+vMovFinal,caixasemnada))
{
 while(!place_meeting(x,y+sign(vMovFinal),caixasemnada)){ y += sign(vMovFinal); }
  vMovFinal = 0; 
  
  
} ;


if (place_meeting(x-1,y,caixasemnada)) 
{
  x=x+1;

};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




if (dirhor == 1) and (canMove)  {image_xscale = 1;  sprite_index = cadeiracorrendolado;}
if (keyboard_check_released(ord('D')))and (canMove) and (!keyboard_check(vk_anykey)) {image_xscale = 1; sprite_index = cadeiralado}

if (dirhor == -1) and (canMove)  {image_xscale = -1;  sprite_index = cadeiracorrendolado;}
if (keyboard_check_released(ord('A')))and (canMove) and (!keyboard_check(vk_anykey)) {image_xscale = -1; sprite_index = cadeiralado;}

if ((dirver == 1) and (dirhor = 0)) and (canMove)  {image_xscale = 1; sprite_index = cadeiracorrendobaixo;}
if (keyboard_check_released(ord('S')))and (canMove)  and (!keyboard_check(vk_anykey)) {image_xscale = 1; sprite_index = cadeirabaixo;}

if ((dirver == -1) and (dirhor = 0)) and (canMove)  {image_xscale = 1; sprite_index = cadeiracorrendocima;}
if (keyboard_check_released(ord('W')))and (canMove) and (!keyboard_check(vk_anykey)) {image_xscale = 1; sprite_index = cadeiracima;}

 

//---------------------------------------------------------------------------- Leva dano
if (!invincible) and (place_meeting(x,y,ataquecadeira)){

invincible = true;
canMove=false;
levandodano=true;
//zerar alarms de ataque
alarm[0] = 0;    //ajeitar sprite
alarm[1] = 0;    //canMove=true
alarm[2] = 0;    //modoataque=false
alarm[3] = 0; //ataque
alarm[4] = 0;    //deletar ataque
alarm[5] = 0; //ataque2la
alarm[7] = 0;    //deletar ataque
alarm[6] = 0; //ataque
alarm[8] = 0;    //deletar ataque


//
alarm[0] = 15;//ajeitar sprite
alarm[1] = 15;//canMove = true
alarm[9] = 15;//invincivle = false
alarm[4] = 1;    //deletar ataque(se houver na hora)
alarm[2] = 15;    //modoataque=false
alarm[10] = 15;   // levandodano= false
if (estado == 1) {sprite_index = cadeirahitcima};
if (estado == 2) {sprite_index = cadeirahitbaixo};
if (estado == 3) {image_xscale = -1 ; sprite_index = cadeirahitlado};
if (estado == 4) {sprite_index = cadeirahitlado};


vidas--;
}

if(vidas==0){
instance_create(x,y,kill)
instance_destroy();
game_restart();
};
 
 
 
 
if (place_meeting(x,y,ataquecadeira) and !invincible){
vidas--;
invincible= true;
alarm[0]=30;
}

if(vidas==0){
game_restart();
};
 
 
//--------------------------------------------------------------------------------------------------====================================================
if (canMove==false) {dirhor=0; dirver=0;};




x = hMovFinal+x;
y = vMovFinal+y;
//--------------------------------------------------------------------------------------------------==================================================------------------


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vidas


for(i=0;i&lt;vidas;i++)
{
if(i&lt;vidas)
{
draw_sprite(Vida,0,40+40*i,50);
}
else
{
draw_sprite(Vidavazia,0,40+40*i,50);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(Sombra1,0,x,y);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
