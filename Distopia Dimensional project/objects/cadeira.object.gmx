<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>cadeirabaixo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>cadeirabaixo</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.3;
modoataque = false;
vel=4;
velinicial=4;
estado=2;
correndo=false;
andar2=false;
canMove=true;
DA = 40;
ATKhMovFinal=0;
ATKvMovFinal=0;
velA=10;
jogavel=false;
invincible=false;
vidas=3;
caraJogavel=jogador;
levandodano=false;
distanciadaparede=1;
tempoinvencivel=12;
item=random_range(0,100);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(levandodano)
{
ATKhMovFinal=0;
ATKvMovFinal=0;
if (instance_exists(ataquecadeira)) {instance_destroy(ataquecadeira)};
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ajeitar dano

vel=velinicial;
canMove = true;
invincible = false
if (instance_exists(ataquecadeira)) {instance_destroy(ataquecadeira)};
levandodano=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DELETAR ATAQUE
if (!jogavel) and (instance_exists(ataquecadeira)) {instance_destroy(ataquecadeira)};
if (jogavel) and (instance_exists(obj_espada)) {instance_destroy(obj_espada)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DELETAR ATAQUE
if (!jogavel) and (instance_exists(ataquecadeira)) {instance_destroy(ataquecadeira)};
if (jogavel) and (instance_exists(obj_espada)) {instance_destroy(obj_espada)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ATAQUE
if(!levandodano){


if (modoataque) and (estado ==1) {ATKvMovFinal = -velA};
if (modoataque) and (estado ==2) {ATKvMovFinal = velA};
if (modoataque) and (estado ==3) {ATKhMovFinal = -velA};
if (modoataque) and (estado ==4) {ATKhMovFinal = velA};


if (!jogavel){
if (estado==1) {instance_create(x,y-45,ataquecadeira)};
if (estado==2) {instance_create(x,y+45,ataquecadeira)};
if (estado==3) {instance_create(x-45,y,ataquecadeira)};
if (estado==4) {instance_create(x+45,y,ataquecadeira)};
if (modoataque){
alarm[5]=1
alarm[4]=3
}
else {
ATKvMovFinal = 0;
ATKvMovFinal = 0;
}
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ATAQUE
if(!levandodano){

if (modoataque) and (estado ==1) {ATKvMovFinal = -velA};
if (modoataque) and (estado ==2) {ATKvMovFinal = velA};
if (modoataque) and (estado ==3) {ATKhMovFinal = -velA};
if (modoataque) and (estado ==4) {ATKhMovFinal = velA};


if (!jogavel){
if (estado==1) {instance_create(x,y-45,ataquecadeira)};
if (estado==2) {instance_create(x,y+45,ataquecadeira)};
if (estado==3) {instance_create(x-45,y,ataquecadeira)};
if (estado==4) {instance_create(x+45,y,ataquecadeira)};
if (modoataque){
alarm[5]=1
alarm[4]=3

}
else {
ATKvMovFinal = 0;
ATKvMovFinal = 0;
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DELETAR ATAQUE
if (!jogavel) and (instance_exists(ataquecadeira)) {instance_destroy(ataquecadeira)};
if (jogavel) and (instance_exists(obj_espada)) {instance_destroy(obj_espada)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ajeitar ataque


canMove=true;
modoataque=false;
vel=velinicial;
ATKhMovFinal = 0;
ATKvMovFinal = 0;
alarm[8] = 1;
if (instance_exists(ataquecadeira)) {instance_destroy(ataquecadeira)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHECK DE OPONENTE
if(!levandodano){











if (place_meeting(x,y,caraJogavel)) or (place_meeting(x+DA,y,caraJogavel)and estado==4) or (place_meeting(x-DA,y,caraJogavel)and estado==3) or (place_meeting(x,y-DA,caraJogavel)and estado==1) or (place_meeting(x,y+DA,caraJogavel)and estado==2)
{
//image_speed = 0.3; OBSOLEI
canMove=false;
modoataque=true;
vel=0;


alarm[3] = 30;    //ajeitar ataque (canMove=true, modoataque=false,vel=2)
alarm[1] = 10; //ataque
alarm[4] = 12;    //deletar ataque
alarm[5] = 14; //ataque2la
alarm[7] = 16;    //deletar ataque
alarm[6] = 18; //ataque
alarm[8] = 20;    //deletar ataque


if (estado==4) {sprite_index = (Timmylado); sprite_index = (cadeiraataquelado);};
if (estado==3) {sprite_index = (Timmylado); image_xscale = -1 ; sprite_index = (cadeiraataquelado);};
if (estado==2) {sprite_index = (Timmylado); sprite_index = (cadeiraataquebaixo);};
if (estado==1) {sprite_index = (Timmylado); sprite_index = (cadeiraataquecima);};

//image_speed = 1;
//if (estado == 1) {sprite_index = (Timmyataquecima1);} 
//if (estado == 2) {sprite_index = (Timmyataquebaixo1);}
//if (estado == 3) {image_xscale = -1; sprite_index = (Timmyataquelado1);}
//if (estado == 4) {sprite_index = (Timmyataquelado1);}

//canAttack = false;
//canMove = false;

//sprite_index = sprite[combo];
//combo = (combo+1)%combomax;


//alarm[1] = 15; //canAttack = true
//alarm[2] = 10; //combo = 0
//alarm[3] = 15; // parar do lado certo
//alarm[4] = 15; // canMove = true
//alarm[5] = 7.5; // instance_create(x,y,espada)
//alarm[6] = 10; // destruir espada
//alarm[7] = 20; // combo = 0






};
if (place_meeting(x+DA,y,jogador)and estado==4) or (place_meeting(x-DA,y,jogador)and estado==3) or (place_meeting(x,y-DA,jogador)and estado==1) or (place_meeting(x,y+DA,jogador)and estado==2)
{
//image_speed = 0.3; OBSOLEI
canMove=false;
modoataque=true;
vel=0;


alarm[3] = 30;    //ajeitar ataque (canMove=true, modoataque=false,vel=2)
alarm[1] = 15; //ataque
alarm[4] = 16;    //deletar ataque
alarm[5] = 20; //ataque2la
alarm[7] = 22;    //deletar ataque
alarm[6] = 25; //ataque
alarm[8] = 27;    //deletar ataque


if (estado==4) {sprite_index = (Timmylado); sprite_index = (cadeiraataquelado);};
if (estado==3) {sprite_index = (Timmylado); image_xscale = -1 ; sprite_index = (cadeiraataquelado);};
if (estado==2) {sprite_index = (Timmylado); sprite_index = (cadeiraataquebaixo);};
if (estado==1) {sprite_index = (Timmylado); sprite_index = (cadeiraataquecima);};

//image_speed = 1;
//if (estado == 1) {sprite_index = (Timmyataquecima1);} 
//if (estado == 2) {sprite_index = (Timmyataquebaixo1);}
//if (estado == 3) {image_xscale = -1; sprite_index = (Timmyataquelado1);}
//if (estado == 4) {sprite_index = (Timmyataquelado1);}

//canAttack = false;
//canMove = false;

//sprite_index = sprite[combo];
//combo = (combo+1)%combomax;


//alarm[1] = 15; //canAttack = true
//alarm[2] = 10; //combo = 0
//alarm[3] = 15; // parar do lado certo
//alarm[4] = 15; // canMove = true
//alarm[5] = 7.5; // instance_create(x,y,espada)
//alarm[6] = 10; // destruir espada
//alarm[7] = 20; // combo = 0






};
















if (place_meeting(x+4,y,obj_wall))
{
x=x-4
};

if (place_meeting(x-4,y,obj_wall))
{
x=x+4
};

if (place_meeting(x,y+4,obj_wall))
{
y=y-4
};

if (place_meeting(x,y-4,obj_wall))
{
y=y+4
};








if (place_meeting(x,y,obj_wall)) and (modoataque)
{

ATKhMovFinal=0;
ATKvMovFinal=0;

};








}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ATAQUE
if(!levandodano){

if (modoataque) and (estado ==1) {ATKvMovFinal = -velA};
if (modoataque) and (estado ==2) {ATKvMovFinal = velA};
if (modoataque) and (estado ==3) {ATKhMovFinal = -velA};
if (modoataque) and (estado ==4) {ATKhMovFinal = velA};


if (!jogavel){
if (estado==1) {instance_create(x,y-45,ataquecadeira)};
if (estado==2) {instance_create(x,y+45,ataquecadeira)};
if (estado==3) {instance_create(x-45,y,ataquecadeira)};
if (estado==4) {instance_create(x+45,y,ataquecadeira)};
if (modoataque){
alarm[5]=1
alarm[4]=3
};
else {
ATKvMovFinal = 0;
ATKvMovFinal = 0;
}

}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Trocar andar2
if(andar2==true){ andar2=false;}
else{andar2=true};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//PAUSE
if(global.pause) exit;
//

///TUDO
//------------------------------------------------------------------------CAMADAS-----------------------------------------------------------------------------------------------------------------------------
depth=-(y);
//------------------------------------------------------------INTELIGENCIA(NAO TAO INTELIGENTE ASSIM)-----------------------------------------------------------------------------------------------------------------------------
item=random_range(0,100);










if(andar2==true){
if(canMove){
if (distance_to_object(caraJogavel)) &lt; 400  and (!modoataque)
{
correndo=true;

if (x=caraJogavel.x) or (x=caraJogavel.x+1) or (x=caraJogavel.x-1)or (x=caraJogavel.x-2) or (x=caraJogavel.x+2)
{
if (y&lt;caraJogavel.y) {y=y+vel%caraJogavel.y; estado=2; sprite_index = cadeiracorrendobaixo}
else
if (y&gt;caraJogavel.y) {y=y-vel%caraJogavel.y; estado=1; sprite_index = cadeiracorrendocima}
}
else{



if (x&lt;caraJogavel.x) {x=x+vel%caraJogavel.x;estado=4 ;image_xscale = 1; sprite_index = cadeiracorrendolado}
else
if (x&gt;caraJogavel.x) {x=x-vel%caraJogavel.x;estado=3;  image_xscale = -1; sprite_index = cadeiracorrendolado}
}
}



}
else
correndo=false;


}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if(!andar2){




if(canMove){
if (distance_to_object(caraJogavel)) &lt; 600  and (!modoataque)
{
correndo=true;

if (y=caraJogavel.y) or (y=caraJogavel.y+1) or (y=caraJogavel.y-1)or (y=caraJogavel.y-2) or (y=caraJogavel.y+2)or(y=caraJogavel.y-3)or (y=caraJogavel.y+3)or(y=caraJogavel.y-4)or (y=caraJogavel.y+4)or(y=caraJogavel.y-5)or (y=caraJogavel.y+5) or(y=caraJogavel.y-6) or (y=caraJogavel.y+6)
{
if (x&lt;caraJogavel.x) {x=x+vel%caraJogavel.x; estado=4;image_xscale = 1; sprite_index = cadeiracorrendolado}
else
if (x&gt;caraJogavel.x) {x=x-vel%caraJogavel.x; estado=3; image_xscale = -1; sprite_index = cadeiracorrendolado}
}
else{



if (y&lt;caraJogavel.y) {y=y+vel%caraJogavel.y;estado=2 ;image_xscale = 1; sprite_index = cadeiracorrendobaixo}
else
if (y&gt;caraJogavel.y) {y=y-vel%caraJogavel.y;estado=1;  image_xscale = 1; sprite_index = cadeiracorrendocima}
}
}
else
correndo=false;


}



}






//-------------------------------------------------------------------------------ATAQUE-------------------------------------------------------------------------------------------------------------------
if(!modoataque){

alarm[2] = 1;

};

//-----------------------------------------------------------------------------Leva dano--------------------------------------------------------------
if (!invincible) and (!levandodano) and (place_meeting(x,y,obj_espada)){


if(estado==1) {y=y+20};
if(estado==2) {y=y-20};
if(estado==3) {x=x+20};
if(estado==4) {x=x-20};


audio_play_sound(cadeiralevandodanosom,1,false);

invincible = true;
canMove=false;
vel=0;
levandodano= true;
//zerar alarms de ataque

alarm[0] = -1;    //ajeitar sprite
alarm[1] = -1;    //canMove=true
alarm[2] = -1;    //modoataque=false
//alarm[3] = -1; //ajeitar ataque
alarm[4] = -1;    //deletar ataque
alarm[5] = -1; //ataque2la
alarm[7] = -1;    //deletar ataque
alarm[6] = -1; //ataque
alarm[8] = -1;    //deletar ataque

//
alarm[3] = 12;    //ajeitar ataque (canMove=true, modoataque=false,vel=velinicial)
alarm[0] = 12;//ajeitar sprite
alarm[1] = 12;//canMove = true
alarm[9] = tempoinvencivel;//invincible = false
alarm[4] = 1;    //deletar ataque(se houver na hora)
alarm[2] = 12;    //modoataque=false

if (estado == 1) {sprite_index = Timmylado;sprite_index = cadeirahitcima};
if (estado == 2) {sprite_index = Timmylado;sprite_index = cadeirahitbaixo};
if (estado == 3) {sprite_index = Timmylado;image_xscale = -1 ; sprite_index = cadeirahitlado};
if (estado == 4) {sprite_index = Timmylado;sprite_index = cadeirahitlado};

ATKhMovFinal=0;
ATKvMovFinal=0;




vidas--;
}

if(vidas&lt;=0){


if(47&gt;item&gt;45)
{instance_create(x,y,estrela)};


instance_destroy(ataquecadeira); //deletar ataque(se houver na hora)
instance_create(x,y-15,kill)
instance_destroy();
};
 
 
 
 



















if (modoataque)x = ATKhMovFinal+x;
if (modoataque)y = ATKvMovFinal+y;








//----------------------------------------------------------------------------------COLISOES----------------==================================================------------------






if(!modoataque)
{



if (place_meeting(x+distanciadaparede,y,obj_wall))or(place_meeting(x+distanciadaparede,y,caixasemnada))
{
x=x-distanciadaparede
};

if (place_meeting(x-distanciadaparede,y,obj_wall)) or (place_meeting(x-distanciadaparede,y,caixasemnada))
{
x=x+distanciadaparede
};

if (place_meeting(x,y+distanciadaparede,obj_wall)) or (place_meeting(x,y+distanciadaparede,caixasemnada))
{
y=y-distanciadaparede
};

if (place_meeting(x,y-distanciadaparede,obj_wall)) or (place_meeting(x,y-distanciadaparede,caixasemnada))
{
y=y+distanciadaparede

};




}




if(!correndo)and(!modoataque) and (canMove)

{
if (estado=4) {image_xscale = 1; sprite_index = cadeiralado}
if (estado=3) {image_xscale = -1; sprite_index = cadeiralado}
if (estado=2) {image_xscale = 1; sprite_index = cadeirabaixo}
if (estado=1) {image_xscale = 1; sprite_index = cadeiracima}
};

if (modoataque)

{


if (place_meeting(x+velA,y,obj_wall))or (place_meeting(x+velA,y,caixasemnada))
{
x=x-velA
};

if (place_meeting(x-velA,y,obj_wall)) or (place_meeting(x-velA,y,caixasemnada))
{
x=x+velA
};

if (place_meeting(x,y+velA,obj_wall)) or (place_meeting(x,y+velA,caixasemnada))
{
y=y-velA
};

if (place_meeting(x,y-velA,obj_wall)) or (place_meeting(x,y-velA,caixasemnada))
{
y=y+velA
};


}
////////////////////////colisao com caixa













































////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if(levandodano)
{

ATKhMovFinal=0;
ATKvMovFinal=0;
if (instance_exists(ataquecadeira)) {instance_destroy(ataquecadeira)};
};





 
 if(place_meeting(x,y,BLOCKMAN))
{
instance_create(x,y-15,kill)
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(Sombra1,0,x,y);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
